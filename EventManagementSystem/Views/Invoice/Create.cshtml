@model EventManagementSystem.Models.Invoice

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_AdminLayoutPage.cshtml";
}

@section Scripts{
    <script>
        $(document).on('change', '#PaidAmount', function () {
            if ($('#PaidAmount').val() > $('#DueAmmount').val()) {
                $('#PaidAmount').parent('div').append("<div style='color:red'>Cannot be greater than Due Ammount</div>");
            }
            else {
                $('#PaidAmount').parent('div').find('div').empty();
            }
        })
        $(document).on('change', '#ClientOrderID', function () {
            debugger;
            var $this = $(this).val();
            $.getJSON('/Invoice/GetOrderInfo', { coid:$this }, function (data) {
                console.log(data);
                $("#TotalBill").val(data.TotalBill);
                $("#DueAmmount").val(data.DueAmmount);
            });
        });
    </script>
    }

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Invoice</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.ClientOrderID, "ClientOrderID", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("ClientOrderID", null, "--Select--", htmlAttributes: new { @class = "form-control",@id= "ClientOrderID" })
            @Html.ValidationMessageFor(model => model.ClientOrderID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PaymentType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PaymentType, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PaymentType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Total Bill", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.Editor("TotalBill", new { htmlAttributes = new { @class = "form-control", @id = "TotalBill" } })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Due Ammount", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.Editor("DueAmmount", new { htmlAttributes = new { @class = "form-control", @id = "DueAmmount" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PaidAmount, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PaidAmount, new { htmlAttributes = new { @class = "form-control",@id= "PaidAmount" } })
            @Html.ValidationMessageFor(model => model.PaidAmount, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
